name: basictest

on:
  push:
  pull_request:
  schedule:
    - cron: '30 18 * * 0'  # 18:30 every Sunday

jobs:
  ncdevtool_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: src
      - name: Pip install packages for ncdevtool
        run: pip install -r ./src/devel/reqs/requirements_devel.txt
      - name: ncdevtool checks
        run: ./src/devel/bin/ncdevtool check -n "fix""me"

  build:
    needs: [ ncdevtool_check ]
    strategy:
      matrix:
        include:
          - { os: ubuntu-24.04-arm,  CC: gcc-12,   CXX: g++-12,     python: '3.13', buildtype: 'Release' }
          - { os: ubuntu-24.04-arm,  CC: gcc-14,   CXX: g++-14,     python: '3.8',  buildtype: 'Debug' }
          - { os: ubuntu-22.04,      CC: gcc-10,   CXX: g++-10,     python: '3.9',  buildtype: 'Release' }
          - { os: ubuntu-latest,     CC: gcc-14,   CXX: g++-14,     python: '3.10', buildtype: 'Debug' }
          - { os: ubuntu-latest,     CC: clang,    CXX: clang++,    python: '3.11', buildtype: 'Debug' }
          - { os: ubuntu-latest,     CC: gcc-12,   CXX: g++-12,     python: '3.12', buildtype: 'Release' }
          - { os: ubuntu-latest,     CC: gcc,      CXX: g++,        python: '3.13', buildtype: 'Release' }
          - { os: macos-latest,      CC: clang,    CXX: clang++,    python: "3.12", buildtype: 'Release' }
          - { os: macos-13,          CC: clang,    CXX: clang++,    python: "3.11", buildtype: 'Release' }
    name: ${{ matrix.os }}.${{ matrix.CC }}.python-${{ matrix.python }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}

    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        path: src

    - name: Enable parallel cmake
      run: python ./src/devel/bin/ncdevtool nprocs --enable-github-parallel

    #workaround (cf. https://github.com/IAEA-NDS/endf-parserpy/issues/42):
    - name: Set INSTALL_ENDF_PARSERPY_CPP=no
      if: matrix.os == 'ubuntu-24.04-arm' || matrix.os == 'macos-13'
      run: echo "INSTALL_ENDF_PARSERPY_CPP=no" >> $GITHUB_ENV

    - name: Setup python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python }}

    - name: Pip install dependencies
      run: python -mpip install -r ./src/devel/reqs/requirements_all_and_devel.txt

    - name: Configure CMake
      run: >
        cmake
        -S ${{github.workspace}}/src
        -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }}
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install
        -DNCRYSTAL_ENABLE_EXAMPLES=ON
        -DNCRYSTAL_BUILD_STRICT=ON
        -DNCRYSTAL_ENABLE_TESTING=ON
        -DMCTOOLS_REQUIRE_ALL_TEST_DEPS=ON
        -DNCRYSTAL_TEST_ENABLE_LONG=ON

    - name: Build
      run: >
        cmake
        --build ${{github.workspace}}/build
        --config ${{ matrix.buildtype }}

    - name: CTest
      run: ctest --test-dir ./build --no-tests=error --output-on-failure --test-output-size-failed 100000 --test-output-truncation middle

