name: condatest
on:
  push:
  pull_request:
  schedule:
    - cron: '30 18 * * 0'  # 18:30 every Sunday

  workflow_dispatch:
    inputs:
      manual-debugging:
        type: boolean
        description: Launch manual debugging tmate session on failure
        default: false

# Workflow which pip installs and tests the source code in a conda environment

jobs:
  ncdevtool_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: src
      - name: Pip install packages for ncdevtool
        run: pip install -r ./src/devel/reqs/requirements_devel.txt
      - name: ncdevtool checks
        run: ./src/devel/bin/ncdevtool check -n "fix""me"

  build:
    needs: [ ncdevtool_check ]
    strategy:
      #fail-fast: false
      matrix:
        include:
          - { os: ubuntu-24.04-arm }
          - { os: ubuntu-22.04 }
          - { os: ubuntu-latest }
          - { os: macos-latest }
          - { os: macos-13 }
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    env:
      CONDA_SOLVER: libmamba

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: ./src_co

      - name: Set up conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: ncrystaltestenv
          environment-file: ./src_co/.github/resources/conda_ncrystaltestenv.yml
          auto-activate-base: false

      - name: Inspect environment
        run: |
          conda info
          conda list
          set -x
          cmake --version
          #Ensure our environment did not get NCrystal installed by accident:
          set +e
          ( python3 -c 'import NCrystal'; if [ $? == 0 ]; then exit 1; else exit 0; fi )
          ( which nctool >/dev/null; if [ $? == 0 ]; then exit 1; else exit 0; fi )
          ( which ncrystal-config >/dev/null; if [ $? == 0 ]; then exit 1; else exit 0; fi )

      - name: Enable parallel cmake
        run: python ./src_co/devel/bin/ncdevtool nprocs --enable-github-parallel

      #To debug a specific issue, it might be useful to use simplebuild to
      #launch just that particular test. So uncomment the following and edit the
      #testfilter pattern below. You can also consider using "sbdbg" instead of "sb":
      #- run: conda install simple-build-system PyYAML
      #- name: Run NCrystal simplebuild tests
      #  run: ./src_co/devel/bin/ncdevtool sb -t --testexcerpts=1000 --testfilter='*loadsimple'

      - name: Install NCrystal
        run: |
          python3 -m pip install ./src_co/ncrystal_core -vv --no-deps
          python3 -m pip install ./src_co/ncrystal_python -vv --no-deps

      - name: Basic NCrystal tests
        run: |
          set -eux
          ncrystal-config --summary
          which python3
          python3 --version
          python3 -c 'print ("python ok")'
          python3 -c 'import NCrystal'
          python3 -c 'import NCrystal;NCrystal.createInfo("Al_sg225.ncmat")'
          nctool -d Al_sg225.ncmat
          python3 -c 'import NCrystal; NCrystal.test(verbose=True)'
          nctool --test

      - name: Simple downstream compilation
        run: |
          set -eux
          ncrystal-config --show libpath
          ncrystal-config --show includedir
          cc -std=c11 ${LDFLAGS} ${CFLAGS} ./src_co/examples/ncrystal_example_c.c -o ncex_c -Wl,-rpath,$(ncrystal-config --show libdir) $(ncrystal-config --show libpath) -I$(ncrystal-config --show includedir)
          ./ncex_c
          c++ -std=c++17 ${LDFLAGS} ${CXXFLAGS} ./src_co/examples/ncrystal_example_cpp.cc -o ncex_cpp -Wl,-rpath,$(ncrystal-config --show libdir) $(ncrystal-config --show libpath) -I$(ncrystal-config --show includedir)
          ./ncex_cpp

      - name: conda install mcstas-core
        run: |
          conda install -c conda-forge mcstas-core

      - name: Run McStas NCrystal_example.instr
        run: |
          set -eux
          mkdir mcstasrun
          cd mcstasrun

          cp "${CONDA_PREFIX}/share/mcstas/resources/examples/NCrystal/NCrystal_example/NCrystal_example.instr" .
          mcrun NCrystal_example.instr sample_cfg=Al_sg225.ncmat -s1000 -n1e5

      - name: Uninstall NCrystal and install conda-forge NCrystal
        run: |
          python3 -m pip uninstall --yes ncrystal
          conda install -c conda-forge ncrystal

      - name: Rerun McStas NCrystal_example.instr
        run: |
          set -eux
          mkdir mcstasrun2
          cd mcstasrun2
          cp "${CONDA_PREFIX}/share/mcstas/resources/examples/NCrystal/NCrystal_example/NCrystal_example.instr" .
          mcrun NCrystal_example.instr sample_cfg=Al_sg225.ncmat -s1000 -n1e5

      #Final step, so tmate step can check if we got this far.
      - name: Final
        id: final-step
        run: |
          echo "All steps fine"
          true

      - name: Setup tmate session for manual debugging
        uses: mxschmitt/action-tmate@v3
        if: always() && inputs.manual-debugging == true && steps.final-step != 'success'
        with:
          limit-access-to-actor: true
