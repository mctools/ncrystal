name: openmc
on:
  push:
  pull_request:
  schedule:
    - cron: '30 8 * * 3'  # 8:30 every Wed

jobs:

  build:
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest, openmcbranch: "develop", python : "3.13" }
          - { os: ubuntu-latest, openmcbranch: "master", python : "3.11" }

    name: ${{ matrix.os }}.openmc-${{ matrix.openmcbranch }}.python-${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    env:
      CONDA_SOLVER: libmamba

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./src

      - name: Checkout test data
        uses: actions/checkout@v4
        with:
          repository: mctools/ncrystal-testdata-openmc
          path: ./src_data

      - name: Checkout openmc
        uses: actions/checkout@v4
        with:
          repository: openmc-dev/openmc
          ref: ${{ matrix.openmcbranch }}
          path: ./src_openmc

      - name: Enable parallel cmake
        run: python ./src/devel/bin/ncdevtool nprocs --enable-github-parallel

      - name: Install extra openmc deps
        run: sudo apt install libhdf5-dev libpng-dev

        #Instead of mpich libhdf5-dev, perhaps:libmpich-dev libhdf5-serial-dev libhdf5-mpich-dev

      - name: Configure OpenMC
        run: |
          mkdir build
          mkdir install
          cmake -S ./src_openmc -B ./build -DCMAKE_INSTALL_PREFIX=./install

      - name: Build OpenMC
        run: cmake --build ./build

      - name: Install OpenMC
        run: cmake --install ./build

      - name: Run openmc --help
        run: ./install/bin/openmc --help

      - name: Install OpenMC python
        run: pip install ./src_openmc

      - name: Import openmc
        run: python3 -c 'import openmc'

      - name: Prepare openmc data
        run: python3 ./src_data/prepare_data.py

      - name: View generated cross_sections.xml
        run: cat ./src_data/cross_sections.xml

      - name: Install ncrystal-python
        run: pip install ./src/ncrystal_python

      - name: Install ncrystal-core
        run: pip install ./src/ncrystal_core

      - name: Setup OpenMC environment
        run: |
          echo "PATH=$PWD/install/bin:${PATH:-}" >> $GITHUB_ENV
          echo "OPENMC_CROSS_SECTIONS=$PWD/src_data/cross_sections.xml" >> $GITHUB_ENV

      - name: Run basic sim example
        run: python3 ./src/devel/openmc/basicsim.py
